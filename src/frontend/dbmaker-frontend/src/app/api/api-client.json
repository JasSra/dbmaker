{
  "openapi": "3.0.1",
  "info": {
    "title": "DbMaker API",
    "description": "Database Container Orchestration API",
    "version": "v1"
  },
  "paths": {
    "/api/AuthDebug/anonymous": {
      "get": {
        "tags": [
          "AuthDebug"
        ],
        "summary": "Test endpoint that doesn't require authentication",
        "operationId": "anonymous",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/AuthDebug/authenticated": {
      "get": {
        "tags": [
          "AuthDebug"
        ],
        "summary": "Test endpoint that requires authentication",
        "operationId": "authenticated",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/AuthDebug/validate-token": {
      "post": {
        "tags": [
          "AuthDebug"
        ],
        "summary": "Test custom token validation directly",
        "operationId": "validate-token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenValidationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenValidationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenValidationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/AuthDebug/status": {
      "get": {
        "tags": [
          "AuthDebug"
        ],
        "summary": "Get current authentication status and token information",
        "operationId": "status",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/AuthDebug/token-info": {
      "get": {
        "tags": [
          "AuthDebug"
        ],
        "summary": "Get detailed information about the current JWT token",
        "operationId": "token-info",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Containers": {
      "get": {
        "tags": [
          "Containers"
        ],
        "operationId": "ContainersAll",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Containers"
        ],
        "operationId": "ContainersPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContainerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContainerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContainerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Containers/{id}": {
      "get": {
        "tags": [
          "Containers"
        ],
        "operationId": "ContainersGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Containers"
        ],
        "operationId": "ContainersDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Containers/{id}/start": {
      "post": {
        "tags": [
          "Containers"
        ],
        "operationId": "start",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Containers/{id}/stop": {
      "post": {
        "tags": [
          "Containers"
        ],
        "operationId": "stop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Containers/{id}/stats": {
      "get": {
        "tags": [
          "Containers"
        ],
        "operationId": "stats",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerMonitoringData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerMonitoringData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerMonitoringData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Containers/all-debug": {
      "get": {
        "tags": [
          "Containers"
        ],
        "operationId": "all-debug",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Containers/create-demo": {
      "post": {
        "tags": [
          "Containers"
        ],
        "operationId": "create-demo",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Containers/cleanup-demo": {
      "delete": {
        "tags": [
          "Containers"
        ],
        "operationId": "cleanup-demo",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Containers/database-debug": {
      "get": {
        "tags": [
          "Containers"
        ],
        "operationId": "database-debug",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Containers/emergency-reset": {
      "post": {
        "tags": [
          "Containers"
        ],
        "operationId": "emergency-reset",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Health": {
      "get": {
        "tags": [
          "Health"
        ],
        "operationId": "Health",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Monitoring/stats": {
      "get": {
        "tags": [
          "Monitoring"
        ],
        "summary": "Get real-time statistics for all user containers",
        "operationId": "statsAll",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMonitoringData"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMonitoringData"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMonitoringData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Monitoring/stats/{containerId}": {
      "get": {
        "tags": [
          "Monitoring"
        ],
        "summary": "Get statistics for a specific container",
        "operationId": "stats2",
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerMonitoringData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerMonitoringData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerMonitoringData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Monitoring/summary": {
      "get": {
        "tags": [
          "Monitoring"
        ],
        "summary": "Get system-wide monitoring summary (admin only)",
        "operationId": "summary",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MonitoringSummary"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitoringSummary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitoringSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Monitoring/logs/{containerId}": {
      "get": {
        "tags": [
          "Monitoring"
        ],
        "summary": "Get container logs (if available)",
        "operationId": "logs",
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lines",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerLogs"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerLogs"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerLogs"
                }
              }
            }
          }
        }
      }
    },
    "/api/Monitoring/test/{containerId}": {
      "post": {
        "tags": [
          "Monitoring"
        ],
        "summary": "Test container connectivity",
        "operationId": "test",
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerTestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerTestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerTestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Settings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "operationId": "SettingsGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "operationId": "SettingsPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Settings/global": {
      "get": {
        "tags": [
          "Settings"
        ],
        "operationId": "globalGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "operationId": "globalPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Settings/docker/remote-host": {
      "post": {
        "tags": [
          "Settings"
        ],
        "operationId": "remote-hostPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoteDockerHost"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoteDockerHost"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoteDockerHost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Settings/docker/remote-host/{hostId}": {
      "delete": {
        "tags": [
          "Settings"
        ],
        "operationId": "remote-hostDELETE",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Setup/status": {
      "get": {
        "tags": [
          "Setup"
        ],
        "summary": "Check if the system needs initial setup",
        "operationId": "status2",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SetupStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/Setup/validate/docker": {
      "get": {
        "tags": [
          "Setup"
        ],
        "summary": "Validate Docker daemon connectivity",
        "operationId": "docker",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Setup/validate/msal": {
      "get": {
        "tags": [
          "Setup"
        ],
        "summary": "Validate MSAL configuration",
        "operationId": "msal",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Setup/initialize": {
      "post": {
        "tags": [
          "Setup"
        ],
        "summary": "Initialize the system with admin user and backup key",
        "operationId": "initialize",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitializeSystemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InitializeSystemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InitializeSystemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InitializationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitializationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitializationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Templates": {
      "get": {
        "tags": [
          "Templates"
        ],
        "operationId": "Templates",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Templates/{key}": {
      "get": {
        "tags": [
          "Templates"
        ],
        "operationId": "Templates2",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Templates/{key}/versions/{version}": {
      "get": {
        "tags": [
          "Templates"
        ],
        "operationId": "versions",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Templates/{key}/preview": {
      "get": {
        "tags": [
          "Templates"
        ],
        "operationId": "preview",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/test/create-container": {
      "post": {
        "tags": [
          "Test"
        ],
        "operationId": "create-container",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCreateContainerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCreateContainerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestCreateContainerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/test/port": {
      "get": {
        "tags": [
          "Test"
        ],
        "operationId": "port",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/test/subdomain/{userId}/{containerName}/{databaseType}": {
      "get": {
        "tags": [
          "Test"
        ],
        "operationId": "subdomain",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "databaseType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/test/docker-status": {
      "get": {
        "tags": [
          "Test"
        ],
        "operationId": "docker-status",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "me",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/me/stats": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "stats3",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ContainerLogs": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "containerId": {
            "type": "string",
            "nullable": true
          },
          "lines": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ContainerMonitoringData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "containerId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ContainerStatus"
          },
          "cpuUsage": {
            "type": "number",
            "format": "double"
          },
          "memoryUsage": {
            "type": "integer",
            "format": "int64"
          },
          "memoryLimit": {
            "type": "integer",
            "format": "int64"
          },
          "networkIO": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "isHealthy": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContainerResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "databaseType": {
            "type": "string",
            "nullable": true
          },
          "connectionString": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ContainerStatus"
          },
          "subdomain": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "configuration": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ContainerSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "showAllContainers": {
            "type": "boolean"
          },
          "showSystemContainers": {
            "type": "boolean"
          },
          "enableVisualization": {
            "type": "boolean"
          },
          "hiddenContainers": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ContainerStatus": {
        "type": "string",
        "enum": [
          "Creating",
          "Running",
          "Stopped",
          "Failed",
          "Removing"
        ]
      },
      "ContainerTestResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "containerId": {
            "type": "string",
            "nullable": true
          },
          "isReachable": {
            "type": "boolean"
          },
          "responseTime": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "testedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateContainerRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "databaseType",
          "name"
        ],
        "properties": {
          "databaseType": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "configuration": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "DatabaseContainer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "databaseType": {
            "type": "string",
            "nullable": true
          },
          "containerName": {
            "type": "string",
            "nullable": true
          },
          "containerId": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "connectionString": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ContainerStatus"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastAccessedAt": {
            "type": "string",
            "format": "date-time"
          },
          "configuration": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "subdomain": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "DockerSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "defaultHost": {
            "type": "string",
            "nullable": true
          },
          "enableMaintenance": {
            "type": "boolean"
          },
          "autoCleanup": {
            "type": "boolean"
          },
          "maintenanceInterval": {
            "type": "integer",
            "format": "int32"
          },
          "remoteHosts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RemoteDockerHost"
            }
          },
          "currentRemoteHost": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InitializationResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "adminUserCreated": {
            "type": "boolean"
          },
          "backupKey": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InitializeSystemRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "adminEmail": {
            "type": "string",
            "nullable": true
          },
          "adminName": {
            "type": "string",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "additionalConfig": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "MonitoringSummary": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "totalContainers": {
            "type": "integer",
            "format": "int32"
          },
          "runningContainers": {
            "type": "integer",
            "format": "int32"
          },
          "stoppedContainers": {
            "type": "integer",
            "format": "int32"
          },
          "failedContainers": {
            "type": "integer",
            "format": "int32"
          },
          "totalMemoryUsage": {
            "type": "integer",
            "format": "int64"
          },
          "averageCpuUsage": {
            "type": "number",
            "format": "double"
          },
          "unhealthyContainers": {
            "type": "integer",
            "format": "int32"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NginxSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enableDynamicSubdomains": {
            "type": "boolean"
          },
          "baseDomain": {
            "type": "string",
            "nullable": true
          },
          "listenPort": {
            "type": "integer",
            "format": "int32"
          },
          "useGuidSubdomains": {
            "type": "boolean"
          },
          "subdomainMappings": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "RemoteDockerHost": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "host": {
            "type": "string",
            "nullable": true
          },
          "useTLS": {
            "type": "boolean"
          },
          "certPath": {
            "type": "string",
            "nullable": true
          },
          "keyPath": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "lastConnected": {
            "type": "string",
            "format": "date-time"
          },
          "lastError": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SettingsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/SystemSettings"
          },
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SetupStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "databaseConfigured": {
            "type": "boolean"
          },
          "adminUserExists": {
            "type": "boolean"
          },
          "dockerConnected": {
            "type": "boolean"
          },
          "msalConfigured": {
            "type": "boolean"
          },
          "systemReady": {
            "type": "boolean"
          }
        }
      },
      "SystemSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "docker": {
            "$ref": "#/components/schemas/DockerSettings"
          },
          "ui": {
            "$ref": "#/components/schemas/UISettings"
          },
          "nginx": {
            "$ref": "#/components/schemas/NginxSettings"
          },
          "containers": {
            "$ref": "#/components/schemas/ContainerSettings"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TestCreateContainerRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "databaseType": {
            "type": "string",
            "nullable": true
          },
          "configuration": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "TokenValidationRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UISettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "darkMode": {
            "type": "boolean"
          },
          "theme": {
            "type": "string",
            "nullable": true
          },
          "enableAnimations": {
            "type": "boolean"
          },
          "refreshInterval": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateSettingsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "docker": {
            "$ref": "#/components/schemas/DockerSettings"
          },
          "ui": {
            "$ref": "#/components/schemas/UISettings"
          },
          "nginx": {
            "$ref": "#/components/schemas/NginxSettings"
          },
          "containers": {
            "$ref": "#/components/schemas/ContainerSettings"
          }
        }
      },
      "User": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastLoginAt": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "containers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DatabaseContainer"
            }
          }
        }
      },
      "ValidationResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter JWT Bearer token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}